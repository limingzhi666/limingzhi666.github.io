{"title":"MVCC","uid":"c027261888329c6d8eabd6851937e11d","slug":"MVCC","date":"2022-06-11T11:53:14.852Z","updated":"2022-06-11T11:54:09.746Z","comments":true,"path":"api/articles/MVCC.json","keywords":null,"cover":[],"content":"<p><a name=\"6958c26a\"></a></p>\n<h4 id=\"多版本并发控制：\"><a href=\"#多版本并发控制：\" class=\"headerlink\" title=\"多版本并发控制：\"></a>多版本并发控制：</h4><p>MVCC就是通过数据行的多个版本来管理实现数据库的并发控制，这项技术使得在InnoDB的事务隔离级别下执行一直性读操作有了保证，换言之就是为了查询一些正在被另一个事务更新的行，并且可以看到他们被更新之前的值，这样在做查询的时候就不用等待另一个事务释放锁</p>\n<p><a name=\"142f3cd0\"></a></p>\n<h5 id=\"MVCC的实现依赖于：隐藏字段、Undo-Log、ReadView\"><a href=\"#MVCC的实现依赖于：隐藏字段、Undo-Log、ReadView\" class=\"headerlink\" title=\"MVCC的实现依赖于：隐藏字段、Undo Log、ReadView\"></a>MVCC的实现依赖于：隐藏字段、Undo Log、ReadView</h5><p>MySQL中只有InnoDB存储引擎支持MVCC</p>\n<p>MySQL中默认的隔离级别是可重复读，解决了脏读和不可重复读的问题，但是MVCC可以不采用锁机制，而是通过乐观锁的方式来解决不可重复读和幻读的问题！</p>\n<p><a name=\"10a7e53a\"></a></p>\n<h5 id=\"隐藏字段、Undo-Log版本链：\"><a href=\"#隐藏字段、Undo-Log版本链：\" class=\"headerlink\" title=\"隐藏字段、Undo Log版本链：\"></a>隐藏字段、Undo Log版本链：</h5><p>trx_id：每次一个事务对某条聚簇索引记录进行改动时，都会把该事务的事务id复制给trx_id隐藏列</p>\n<p>roll_pointer：每次对某条聚簇索引进行改动 时，都会把旧的版本写入undo日志中，这个隐藏列相当于一个指针，可通过它来找到该记录修改之前的信息</p>\n<p>每次对记录进行改动，都会记录一条undo日志，每条undo日志也都有一个 roll_pointer 属性<br />（ INSERT 操作对应的undo日志没有该属性，因为该记录并没有更早的版本），可以将这些 undo日志<br />都连起来，串成一个链表：</p>\n<p><img src=\"/../assets/1647330826124-d2422f2d-19e9-4c13-a114-0720723c6ace.png\" alt=\"1646635959975.png\"></p>\n<p>对该记录每次更新后，都会将旧值放到一条 undo日志 中，就算是该记录的一个旧版本，随着更新次数<br />的增多，所有的版本都会被 roll_pointer 属性连接成一个链表，我们把这个链表称之为 <strong>版本链</strong> ，版<br />本链的头节点就是当前记录最新的值。<br />每个版本中还包含生成该版本时对应的 事务id 。</p>\n<p><a name=\"5f7fa49d\"></a></p>\n<h5 id=\"ReadView：（核心）\"><a href=\"#ReadView：（核心）\" class=\"headerlink\" title=\"ReadView：（核心）\"></a>ReadView：（核心）</h5><p><a name=\"336ee92f\"></a></p>\n<h6 id=\"1-什么时ReadView？\"><a href=\"#1-什么时ReadView？\" class=\"headerlink\" title=\"1.什么时ReadView？\"></a>1.什么时ReadView？</h6><p>在MVCC机制中，多个事务对同一个行记录进行更新会产生多个历史快照，这些历史快照保存在Undo Log中。如果一个事务想要查询这个行记录，需要读取哪个版本的行记录呢？这时就需要用到ReadView了，帮我们解决可见性的问题</p>\n<p>ReadView就是一个事务在使用MVCC机制进行快照读取操作时产生的读视图，当事务启动时，会根据数据库系统当前的一个快照，InnoDB为每个事务构造了一个数组，用来记录并维护系统当前活跃事务的id（活跃就是启动了事务但是没有提交）</p>\n<p><a name=\"4c00f297\"></a></p>\n<h5 id=\"MVCC整体操作流程\"><a href=\"#MVCC整体操作流程\" class=\"headerlink\" title=\"MVCC整体操作流程\"></a>MVCC整体操作流程</h5><ol>\n<li>首先获取事务自己的版本号，也就是事务 ID；</li>\n<li>获取 ReadView；</li>\n<li>查询得到的数据，然后与 ReadView 中的事务版本号进行比较；</li>\n<li>如果不符合 ReadView 规则，就需要从 Undo Log 中获取历史快照；</li>\n<li>最后返回符合规则的数据。</li>\n</ol>\n<p><a name=\"8c9d507e\"></a></p>\n<h4 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h4><p>MVCC只有在读已提交和可重复读两种隔离级别的事务在执行快照读操作时访问记录版本链的过程，这样使不同事务的读-写、写-读操作并发执行，提升系统性能</p>\n<p>核心点在于ReadView的原理，读已提交和可重复读这两个隔离级别的很大不同就是生成ReadView的时机不同：</p>\n<pre><code>READ COMMITTD在每次进行普通的SELECT操作前都会生成一个ReadView\n\nREPEATABLE READ只会在第一次进行普通的SELECT操作前生成一个ReadView，之后的查询都重复使用这个ReadView\n</code></pre>\n<p><a name=\"993bce03\"></a></p>\n<h5 id=\"通过MVCC可以解决的问题：\"><a href=\"#通过MVCC可以解决的问题：\" class=\"headerlink\" title=\"通过MVCC可以解决的问题：\"></a>通过MVCC可以解决的问题：</h5><p>1.读写之间阻塞的问。通过MVCC可以让读写互相不阻塞，即读不阻塞写，写不阻塞读，这样就可以提升事务并发处理能力</p>\n<p>2.降低了死锁的概率。因为MVCC采用了乐观锁的方式，读取数据时并不需要加锁，对于写操作，也只锁定了必要的行</p>\n<p>3.解决快照读的问题。当我们查询数据库在某个时间点的快照时，只能看到这个时间点之前事务提交更新的结果，而不能看到这个时间点之后事务提交的更新结果</p>\n","text":" 多版本并发控制：MVCC就是通过数据行的多个版本来管理实现数据库的并发控制，这项技术使得在InnoDB的事务隔离级别下执行一直性读操作有了保证，换言之就是为了查询一些正在被另一个事务更新的行，并且可以看到他们被更新之前的值，这样在做查询的时候就不用等待另一个事务释放锁 MVCC...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"MySQL","slug":"MySQL","count":6,"path":"api/categories/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":6,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%EF%BC%9A\"><span class=\"toc-text\">多版本并发控制：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#MVCC%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%BE%9D%E8%B5%96%E4%BA%8E%EF%BC%9A%E9%9A%90%E8%97%8F%E5%AD%97%E6%AE%B5%E3%80%81Undo-Log%E3%80%81ReadView\"><span class=\"toc-text\">MVCC的实现依赖于：隐藏字段、Undo Log、ReadView</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%9A%90%E8%97%8F%E5%AD%97%E6%AE%B5%E3%80%81Undo-Log%E7%89%88%E6%9C%AC%E9%93%BE%EF%BC%9A\"><span class=\"toc-text\">隐藏字段、Undo Log版本链：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ReadView%EF%BC%9A%EF%BC%88%E6%A0%B8%E5%BF%83%EF%BC%89\"><span class=\"toc-text\">ReadView：（核心）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-%E4%BB%80%E4%B9%88%E6%97%B6ReadView%EF%BC%9F\"><span class=\"toc-text\">1.什么时ReadView？</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#MVCC%E6%95%B4%E4%BD%93%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">MVCC整体操作流程</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93%EF%BC%9A\"><span class=\"toc-text\">总结：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87MVCC%E5%8F%AF%E4%BB%A5%E8%A7%A3%E5%86%B3%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%9A\"><span class=\"toc-text\">通过MVCC可以解决的问题：</span></a></li></ol></li></ol>","author":{"name":"小李不在_","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<b>Welcome</b> <br />  <b>qq：3163678221</b><br />  <b>河北工程大学</b>","socials":{"github":"https://github.com/limingzhi666","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数据表的设计原则","uid":"fdf7bb567823aed005b212decd2fd46a","slug":"数据表的设计原则","date":"2022-06-11T11:53:14.856Z","updated":"2022-06-11T11:55:10.247Z","comments":true,"path":"api/articles/数据表的设计原则.json","keywords":null,"cover":null,"text":" 数据表的设计原则：（具体根据实际情况）1.数据表的个数越少越好 2.数据表中的字段越少越好 3.数据表中联合主键的字段个数越少越好 ​ 联合主键的字段越多，导致占用的索引空间较大 4.使用主键和外键越多越好 ​ 此处的外键并不一定是指数据库中的外键，而是指一种业务逻辑关系，表和...","link":"","photos":[],"count_time":{"symbolsCount":173,"symbolsTime":"1 mins."},"categories":[{"name":"MySQL","slug":"MySQL","count":6,"path":"api/categories/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":6,"path":"api/tags/MySQL.json"}],"author":{"name":"小李不在_","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<b>Welcome</b> <br />  <b>qq：3163678221</b><br />  <b>河北工程大学</b>","socials":{"github":"https://github.com/limingzhi666","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}