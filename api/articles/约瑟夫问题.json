{"title":"约瑟夫环","uid":"d1408add887a68e7d3f5038df24f24f8","slug":"约瑟夫问题","date":"2022-06-11T13:28:51.903Z","updated":"2022-06-11T13:32:00.060Z","comments":true,"path":"api/articles/约瑟夫问题.json","keywords":null,"cover":[],"content":"<p><a href=\"https://blog.csdn.net/u011500062/article/details/72855826?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165163102216782388067141%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=165163102216782388067141&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-2-72855826.142%5Ev9%5Epc_search_result_control_group,157%5Ev4%5Econtrol&utm_term=%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98&spm=1018.2226.3001.4187\">约瑟夫环——公式法（递推公式）</a><br /><img src=\"/../assets/1651631373179-da66a7f3-6d22-47e6-a534-42afa61d079f.png\" alt=\"image.png\"></p>\n","text":"约瑟夫环——公式法（递推公式） ","link":"","photos":[],"count_time":{"symbolsCount":16,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":8,"path":"api/categories/数据结构.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":8,"path":"api/tags/数据结构.json"},{"name":"算法","slug":"算法","count":8,"path":"api/tags/算法.json"}],"toc":"","author":{"name":"小李不在_","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<b>Welcome</b> <br />  <b>qq：3163678221</b><br />  <b>河北工程大学</b>","socials":{"github":"https://github.com/limingzhi666","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"凸包算法-Andrew算法","uid":"dffa3dc092427bd4c66bed12d5783ad5","slug":"凸包算法-- Andrew 算法","date":"2022-06-11T13:28:51.911Z","updated":"2022-06-11T13:29:56.770Z","comments":true,"path":"api/articles/凸包算法-- Andrew 算法.json","keywords":null,"cover":[],"text":" class Solution &#123; public int[][] outerTrees(int[][] trees) &#123; int n = trees.length; if (n &lt; 4) &#123; return trees; &#125; /* 按照...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":8,"path":"api/categories/数据结构.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":8,"path":"api/tags/数据结构.json"},{"name":"算法","slug":"算法","count":8,"path":"api/tags/算法.json"}],"author":{"name":"小李不在_","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<b>Welcome</b> <br />  <b>qq：3163678221</b><br />  <b>河北工程大学</b>","socials":{"github":"https://github.com/limingzhi666","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"字典树(前缀树)","uid":"781fb484634f3be0f1bf39d2ec5d0535","slug":"字典树","date":"2022-06-11T13:28:51.903Z","updated":"2022-06-11T13:32:00.060Z","comments":true,"path":"api/articles/字典树.json","keywords":null,"cover":[],"text":"1 class Solution &#123; public int findKthNumber(int n, int k) &#123; int ans = 1; while(k>1)&#123; int count = dfs(ans,n); //求出子树的数量和K比较，若大...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":8,"path":"api/categories/数据结构.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":8,"path":"api/tags/数据结构.json"},{"name":"算法","slug":"算法","count":8,"path":"api/tags/算法.json"}],"author":{"name":"小李不在_","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<b>Welcome</b> <br />  <b>qq：3163678221</b><br />  <b>河北工程大学</b>","socials":{"github":"https://github.com/limingzhi666","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}